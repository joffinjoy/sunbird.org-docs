openapi: 3.0.1
info:
  title: ML-Report Service API(s)
  termsOfService: 'https://github.com/project-sunbird/sunbird-commons/blob/master/LICENSE'
  description: >-
    - The ML-Report Service Apis generating app reports and pdf reports etc 
    
    - The URL for ML-Report service API(s) is `dhiti/api`

    - <b>Note:</b> These resources can be used in other services 
  contact: {}
  version: '1.0'
servers:
- url: https://staging.open-sunbird.org/dhiti/api
  variables: {}
paths: 
  /v1/observations/listAllEvidences:
    post:
      tags:
      - Observations API's
      summary: List all evidences of submission/entity/observation question
      description: This API is used for getting all the evidences of a question
           - The endpoint for **Observation listAllEvidences  V1** is `/observations/listAllEvidences`  
      operationId: List all evidences of a question
      parameters:
        - name: X-auth-token
          in: header
          description: Represents the authorized User ID to execute the API.
          required: true
          schema:
            type: string
      requestBody:
        description: >-
            - The body payload comprises of the questionId, submissionId / entityId and observationId / observationId  
            - The body parameter refers to the format of the request, the request body (payload) takes the following media types to 
              payload:
                json
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ObservationListAllEvidenceRequest"
      responses:
        200:
          description: "Survey Submission Report"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllEvidencesResponse'
           
        500:
          description: "'INTERNAL SERVER ERROR. We track these errors automatically and try to set it right at the earliest. Try refreshing the page. If the problem persists contact us at info@sunbird.org.'"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500Error'
        400:
          description: 'BAD REQUEST. The operation failed ! The possible reason for failure is that you may have missed providing input for a mandatory parameter.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservationListAllEvidence400Error'
        
      deprecated: false
      security:
        - bearer: []
  /v1/observations/submissionsCount:
    post:
      tags:
      - Observations API's
      summary: Number of submissions for the entity / observation
      description: This API is used for getting observation submissions count for the entity/ observation
           - The endpoint for **SubmissionsCount V1** is `/observatations/submissionsCount`  
      operationId: Get observation submission count
      parameters:
        - name: X-auth-token
          in: header
          description: Represents the authorized User ID to execute the API.
          required: true
          schema:
            type: string
      requestBody:
        description: >-
            - The body payload comprises of the entityId and observationId or only observationId
            - The body parameter refers to the format of the request, the request body (payload) takes the following media types to 
              payload:
                json
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubmissionCountRequest"
      responses:
        200:
          description: "Get number of submission count for the given entityId and observationId"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionCountResponse'
        500:
          description: "'INTERNAL SERVER ERROR. We track these errors automatically and try to set it right at the earliest. Try refreshing the page. If the problem persists contact us at info@sunbird.org.'"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500Error'
        400:
          description: 'BAD REQUEST. The operation failed ! The possible reason for failure is that you may have missed providing input for a mandatory parameter.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionCount400Error'
      deprecated: false
      security:
        - bearer: []
  /v1/surveys/listAllEvidences:
    post:
      tags:
      - Survey API's
      summary: List all evidences of question
      description: This API is used for getting all the evidences of a question.
           - The endpoint for **Survey listAllEvidences  V1** is `/surveys/listAllEvidences`  
      operationId: survey 
      parameters:
        - name: X-auth-token
          in: header
          description: Represents the authorized User ID to execute the API.
          required: true
          schema:
            type: string
      requestBody:
        description: >-
            - The body payload comprises of the entityId and entityType
            - The body parameter refers to the format of the request, the request body (payload) takes the following media types to 
              payload:
                json
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SurveyListAllEvidenceRequest"
      responses:
        200:
          description: "Survey Submission Report"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllEvidencesResponse'
           
        500:
          description: "'INTERNAL SERVER ERROR. We track these errors automatically and try to set it right at the earliest. Try refreshing the page. If the problem persists contact us at info@sunbird.org.'"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500Error'
        400:
          description: 'BAD REQUEST. The operation failed ! The possible reason for failure is that you may have missed providing input for a mandatory parameter.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SurveySubmissionReport400Error'
        
      deprecated: false
      security:
        - bearer: []
  /v1/surveys/getAllResponsesOfQuestion:
    post:
      tags:
      - Survey API's
      summary: Get all responses for the given questionId
      description: This API is used for getting all the response of a question.
           - The endpoint for **Survey  getAllResponsesOfQuestion  V1** is `/surveys/getAllResponsesOfQuestion`  
      operationId: Get all responses for the given questionId
      parameters:
        - name: X-auth-token
          in: header
          description: Represents the authorized User ID to execute the API.
          required: true
          schema:
            type: string
      requestBody:
        description: >-
            - The body payload comprises of the entityId and entityType
            - The body parameter refers to the format of the request, the request body (payload) takes the following media types to 
              payload:
                json
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SurveyGetAllResponsesOfQuestionRequest"
      responses:
        200:
          description: "Get All Responses Of a Question"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SurveyGetAllResponsesOfQuestionResponse'
           
        500:
          description: "'INTERNAL SERVER ERROR. We track these errors automatically and try to set it right at the earliest. Try refreshing the page. If the problem persists contact us at info@sunbird.org.'"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500Error'
        400:
          description: 'BAD REQUEST. The operation failed ! The possible reason for failure is that you may have missed providing input for a mandatory parameter.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SurveyGetAllResponsesOfQuestion400Error'
        
      deprecated: false
      security:
        - bearer: []



components:
  schemas:
   
    500Error:
      type: object
      properties:
        result:
          type: boolean
          example: false
        message:
          type: string
          example: Internal Server Error
    ObservationListAllEvidenceRequest:
      type: object
      properties:
        submissionId:
          type: string
          example: 5efc83b545cfa47ab52d7608
        entityId:
          type: string
          example: 5ffd83b545cfa47ab52d7609
        observationId:
          type: string
          example: 5fdb83b545cfa47ab52d7601
        questionId:
          type: string
          example: SA5015-1608719629286
    ListAllEvidencesResponse:
      type: object
      properties:
        result:
          type: boolean
          example: true
        data:
          type: array
          items: 
            type: object
            properties:
              images:
                type: array
                items:
                  $ref: '#/components/schemas/EvidenceArray'
              videos:
                type: array
                items:
                  $ref: '#/components/schemas/EvidenceArray'
              documents:
                type: array
                items:
                  $ref: '#/components/schemas/EvidenceArray'
              remars:
                type: array
                items:
                  type: string
                example: [""]
    ObservationListAllEvidence400Error:
      type: object
      properties:
        result:
          type: boolean
          example: false
        message:
          type: string
          example: questionId and submissionId or entityId and observationId or observationId are required fields
    EvidenceArray:
      type: object
      properties:
        url:
          type: string
          example: 5f6b0f8626e1b91d91c44bad/tmp_2020-8-22-13850488768898328338.jpg
        extension:
          type: string
          example: jpg
    SurveyListAllEvidenceRequest:
      type: object
      properties:
        solutionId:
          description: 'solution Id'
          type: string
          example: 5ffd83b545cfa47ab52d760a
        submissionId:
          description: 'submission Id'
          type: string
          example: 5ffd83b545cfa47ab52d760a
        questionId:
          description: 'question Id'
          type: string
          example: SA5015-1608719629286
    SurveySubmissionReport400Error:
      type: object
      properties:
        result:
          type: boolean
          example: false
        message:
          type: string
          example: submissionId is a required field
    SurveyGetAllResponsesOfQuestionRequest:
      type: object
      required:
        - solutionId
        - questionExternalId
      properties:
        solutionId:
          description: 'solution Id'
          type: string
          example: 5ffd83b545cfa47ab52d760a
        questionExternalId:
          description: 'question ExternalId Id'
          type: string
          example: SA5015-1608719629286
        completedDate:
          description: 'completed date'
          type: string
          example: "2015-07-28T01:00:00.000Z"
          
    SurveyGetAllResponsesOfQuestionResponse:
      type: object
      properties:
        question: 
          type: string
          example: How many children are there in class
        answers:
          type: array
          items:
             $ref: ''
          example: [9,10]
        completedDate:
          type: string
          example: "2015-07-28T01:00:00.000Z"
          
    SurveyGetAllResponsesOfQuestion400Error:
      type: object
      properties:
        result:
          type: boolean
          example: false
        message:
          type: string
          example: solutionId, questionExternalId and completedDate are required fields
    SubmissionCountRequest:
      type: object
      properties:
        entityId:
          type: string
          example: 5efc83b545cfa47ab52d7608
        observationId:
          type: string
          example: 5cac83b545cfa47ab52d7789
    SubmissionCountResponse:
      type: object
      properties:
        result:
          type: boolean
          example: true
        data:
          type: object
          properties:
            noOfSubmissions:
              type: integer
              example: 4
    SubmissionCount400Error:
      type: object
      properties:
        result:
          type: boolean
          example: false
        message:
          type: string
          example: entityId and observation or only observationId are required fields.
  
  
  securitySchemes:
    bearer:
      type: apiKey
      name: Authorization
      in: header    
      